/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> pq=new PriorityQueue(new Comparator<ListNode>(){
            @Override
            public int compare(ListNode a1,ListNode a2){
                return a1.val-a2.val;
            }
        });
        for(ListNode l:lists){
            while(l!=null){
                pq.offer(l);
                l=l.next;
            }
        }
        ListNode res=new ListNode(0);
        ListNode tmp=res;
        while(!pq.isEmpty()){
            tmp.next=pq.poll();
            tmp=tmp.next;
        }
        tmp.next=null;
        return res.next;
    }
}