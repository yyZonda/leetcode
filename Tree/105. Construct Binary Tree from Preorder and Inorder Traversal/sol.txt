/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        HashMap<Integer,Integer> hm=new HashMap();
        for(int i=0;i<inorder.length;i++)
            hm.put(inorder[i],i);
        return helper(preorder,0,preorder.length-1,inorder,0,inorder.length-1,hm);
    }
    public TreeNode helper(int[] preorder,int pl,int pr,int[] inorder,int il,int ir,HashMap<Integer,Integer> hm){
        if(pl>pr||il>ir)
            return null;       
        TreeNode root=new TreeNode(preorder[pl]);
        int cur=hm.get(preorder[pl]);
        TreeNode left=helper(preorder,pl+1,pl+cur-il,inorder,il,cur-1,hm);
        TreeNode right=helper(preorder,pl+cur-il+1,pr,inorder,cur+1,ir,hm);
        root.left=left;
        root.right=right;   
        return root;
    }
}