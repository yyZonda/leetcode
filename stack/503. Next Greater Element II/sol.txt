class Solution {
    public int[] nextGreaterElements(int[] nums) {

    //     int[] res = new int[nums.length];
    //     for(int i=0;i<res.length;i++)
    //         res[i]=Integer.MIN_VALUE;
    //     Stack<int[]> stack=new Stack();
    //     stack.push(new int[]{Integer.MAX_VALUE,-1});
    //     boolean brea=false;
    // f1:    for(int i=0;i<nums.length*2;i++){
    //         int cur=i%nums.length;
    //         int tmp=nums[cur];
    //         while(stack.peek()[0]<tmp){
    //             int[] n=stack.pop();
    //             res[n[1]]=tmp;
    //             if(stack.peek()[1]==cur)
    //                 break f1;       
    //         }
    //     stack.push(new int[]{tmp,cur});
    //     }
    //     for(int i=0;i<res.length;i++)
    //         if(res[i]==Integer.MIN_VALUE)
    //             res[i]=-1;
    //     return res;
        int[] res = new int[nums.length];
        Arrays.fill(res,-1);
        Stack<Integer> stack=new Stack();
      f1:  for(int i=0;i<nums.length*2;i++){
            while(!stack.isEmpty()&&nums[stack.peek()]<nums[i%nums.length]){
                res[stack.pop()]=nums[i%nums.length];               
            }
            stack.push(i%nums.length);
        }    
        return res;
    }
}
 