class Solution {
    public int sumSubarrayMins(int[] A) {
        int[] left=new int[A.length],right=new int[A.length];
        Stack<int[]> s1 = new Stack(),s2=new Stack();
        
        for(int i=0;i<A.length;i++){
            int cout=1;
            while(!s1.isEmpty()&&s1.peek()[0]>=A[i]){
              cout+=s1.pop()[1];  
            }
            s1.push(new int[]{A[i],cout});
            left[i]=cout;
        }
        for(int i=A.length-1;i>=0;i--){
            int cout=1;
            while(!s2.isEmpty()&&s2.peek()[0]>A[i]){
              cout+=s2.pop()[1];  
            }
            s2.push(new int[]{A[i],cout});
            right[i]=cout;
        }
        int res=0;
        int modulo=(int)Math.pow(10,9)+7;
        for(int i=0;i<A.length;i++){
            res=(res+left[i]*right[i]*A[i])%modulo;
        }
        return res;
    }
}