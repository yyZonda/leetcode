class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        /////////1
        int r = obstacleGrid.length, c = obstacleGrid[0].length;
        int[][] dp= new int[r][c];
        dp[0][0]=1;
        for(int a=0;a<r;a++)
            for(int b=0;b<c;b++){
                if(obstacleGrid[a][b]!=1){
                if(a>0&&b>0)
                    dp[a][b]=dp[a-1][b]+dp[a][b-1];
                else if(a>0)
                    dp[a][b]+=dp[a-1][b];
                else if(b>0)
                    dp[a][b]+=dp[a][b-1];
                }
                else
                    dp[a][b]=0;
            }
        
        return dp[r-1][c-1];
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        /////////////2
        // int[][] res=new int[obstacleGrid.length+1][obstacleGrid[0].length+1];
        // res[0][1]=1;
        // for(int a=1;a<res.length;a++)
        //     for(int b=1;b<res[0].length;b++){
        //         if(obstacleGrid[a-1][b-1]!=1)
        //             res[a][b]=res[a][b-1]+res[a-1][b];
        //         else
        //             res[a][b]=0;
        //     }
        // return res[obstacleGrid.length][obstacleGrid[0].length];
    }
}